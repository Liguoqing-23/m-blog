import{_ as s,D as i,C as a,am as t}from"./chunks/framework.BDOtvRbC.js";const g=JSON.parse('{"title":"concat、push 的区别","description":"","frontmatter":{},"headers":[],"relativePath":"blog/dev_lang/javascript/concat、push 的区别.md","filePath":"blog/dev_lang/javascript/concat、push 的区别.md"}'),n={name:"blog/dev_lang/javascript/concat、push 的区别.md"},F=t(`<h1 id="concat、push-的区别" tabindex="-1">concat、push 的区别 <a class="header-anchor" href="#concat、push-的区别" aria-label="Permalink to &quot;concat、push 的区别&quot;">​</a></h1><div class="tip custom-block github-alert"><p class="custom-block-title">MDN</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/push" target="_blank" rel="noreferrer">push</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/concat" target="_blank" rel="noreferrer">concat</a></p></div><p>先来看 concat 的语法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">();</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(value0);</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(value0, value1);</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(value0, value1, </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">/* … ,*/</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> valueN);</span></span></code></pre></div><ul><li><code>valueN</code> 是要连接的数组或值。</li><li>返回一个新的数组，包含了 <code>valueN</code> 的浅拷贝。</li></ul><p>调用 <code>concat</code> 方法时，如果任何源数组是稀疏数组，<code>concat</code> 方法会保留空槽。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">var</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> a </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> [</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">1</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">2</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">3</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">];</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">var</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> b </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> [</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">4</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">5</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">6</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">];</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">var</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> c </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> a.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(b);</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">console.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">log</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(c); </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">// [1, 2, 3, 4, 5, 6]</span></span></code></pre></div><p>再来看 push 的语法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">();</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(element0);</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(element0, element1);</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(element0, element1, </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">/* … ,*/</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> elementN);</span></span></code></pre></div><ul><li><code>elementN</code> 要添加到数组末尾的元素。</li><li>返回新数组的长度。</li></ul><p><code>push</code> 方法会改变原数组，改变了 <code>this</code> 的内容和长度。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">var</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> a </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> [</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">1</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">2</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">3</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">];</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">var</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> b </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> [</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">4</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">5</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">6</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">];</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">a.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(b);</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">console.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">log</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(a); </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">// [1, 2, 3, [4, 5, 6]]</span></span></code></pre></div><p>可以发现，<code>concat</code> 方法返回一个新的数组，而 <code>push</code> 方法会改变原数组。而且 <code>concat</code> 方法是连接数组，<code>push</code> 方法是添加元素。</p><p>如果想要像 <code>push</code> 一样在末尾添加元素而不是连接数组，却又不想改变原数组，可以使用 <code>concat</code> 方法，但要注意，所添加的元素需要用 <code>[]</code> 包裹：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">arr.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">concat</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">([element0, element1, </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">/* ... ,*/</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> elementN]);</span></span></code></pre></div><p>而如果想要连接数组且返回新数组长度，可以使用 <code>push</code> 方法，同时需要注意在 <code>push</code> 方法中传入的参数需要使用展开语法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">arr.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">push</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">...</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">[value0, value1, </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">/* ... ,*/</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> valueN]);</span></span></code></pre></div>`,17),l=[F];function h(p,e,k,c,d,o){return a(),i("div",null,l)}const y=s(n,[["render",h]]);export{g as __pageData,y as default};
