import{_ as s,D as i,C as a,am as t}from"./chunks/framework.BDOtvRbC.js";const o=JSON.parse('{"title":"组合函数","description":"","frontmatter":{},"headers":[],"relativePath":"blog/dev_lang/javascript/组合函数.md","filePath":"blog/dev_lang/javascript/组合函数.md"}'),h={name:"blog/dev_lang/javascript/组合函数.md"},l=t(`<h1 id="组合函数" tabindex="-1">组合函数 <a class="header-anchor" href="#组合函数" aria-label="Permalink to &quot;组合函数&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">Chapter 05: Coding by Composing</p><p><a href="https://mostly-adequate.gitbook.io/mostly-adequate-guide/ch05" target="_blank" rel="noreferrer">https://mostly-adequate.gitbook.io/mostly-adequate-guide/ch05</a></p></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes monokai monokai vp-code"><code><span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">const</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;"> compose</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;"> =</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">...</span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">fns</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) </span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">=&gt;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> {</span></span>
<span class="line"><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">    for</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">let</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> i </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;"> 0</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, len </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> fns.length; i </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">&lt;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> len; i</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">++</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) {</span></span>
<span class="line"><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">        if</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">typeof</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> fns[i] </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">!==</span><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;"> &quot;function&quot;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) {</span></span>
<span class="line"><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">            throw</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;"> new</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;"> TypeError</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(</span></span>
<span class="line"><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;">                \`compose expects all arguments to be functions but received </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">\${</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">typeof</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> fns[</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">                    i</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">                ]</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">}</span><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;"> at index </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">\${</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">i</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">}</span><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;">\`</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">            );</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">        }</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">    }</span></span>
<span class="line"><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">    return</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">...</span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) </span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">        fns.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">reduce</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">((</span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">fn</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) </span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">=&gt;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> [fn.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">call</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">null</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">, </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">...</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">res)], args)[</span><span style="--shiki-light:#AE81FF;--shiki-dark:#AE81FF;">0</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">];</span></span>
<span class="line"><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">// test</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">const</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;"> toUpperCase</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;"> =</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">str</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) </span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">=&gt;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> str.</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">toUpperCase</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">();</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">const</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;"> exclaim</span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;"> =</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> (</span><span style="--shiki-light:#FD971F;--shiki-dark:#FD971F;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">str</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">) </span><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">=&gt;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> str </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">+</span><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;"> &quot;!&quot;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">;</span></span>
<span class="line"><span style="--shiki-light:#66D9EF;--shiki-dark:#66D9EF;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">const</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;"> shout </span><span style="--shiki-light:#F92672;--shiki-dark:#F92672;">=</span><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;"> compose</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(exclaim, toUpperCase, console.log);</span></span>
<span class="line"><span style="--shiki-light:#A6E22E;--shiki-dark:#A6E22E;">shout</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">(</span><span style="--shiki-light:#E6DB74;--shiki-dark:#E6DB74;">&quot;hello world&quot;</span><span style="--shiki-light:#F8F8F2;--shiki-dark:#F8F8F2;">); </span><span style="--shiki-light:#88846F;--shiki-dark:#88846F;">// HELLO WORLD!</span></span></code></pre></div>`,3),n=[l];function k(F,p,e,r,d,g){return a(),i("div",null,n)}const c=s(h,[["render",k]]);export{o as __pageData,c as default};
